import sys

from bookmaker.functions import fn_get_season_calendar, fn_get_database_game_ids, fn_compare_id, fn_generate_game_reports, df_insert_games_and_game_reports

def validate_competition_ids(competition_ids):
    try:
        return [int(id) for id in competition_ids]
    except ValueError:
        raise ValueError("Competition IDs must be a list of integers.")

def validate_seasons(seasons):
    season_pattern = re.compile(r'^\d{4}-\d{4}$')
    for season in seasons:
        if not season_pattern.match(season):
            raise ValueError("Seasons must be in the format 'YYYY-YYYY'.")
    return seasons

def validate_max_gameweek(max_gameweek):
    if max_gameweek is not None:
        try:
            return int(max_gameweek)
        except ValueError:
            raise ValueError("Max gameweek must be an integer.")
    return None

def main(competition_ids, seasons, max_gameweek):
    # Validate parameters
    competition_ids = validate_competition_ids(competition_ids)
    seasons = validate_seasons(seasons)
    max_gameweek = validate_max_gameweek(max_gameweek)
    
    # Get the seasons calendars from FBref
    df_fbref_data = fn_get_season_calendar(competition_ids, seasons, max_gameweek)
    
    # Get the corresponding games from the database
    df_games_db = fn_get_database_game_ids(competition_ids, seasons)

    # Check if there are new games
    df_new_games = fn_compare_id(df_games_db, df_fbref_data)

    if df_new_games.empty:
        print('No new games to insert')
        return
    else: 
        print(f'{len(df_new_games)} new games to insert')

    # Generate the game reports for new games
    df_new_game_reports = fn_generate_game_reports(df_new_games)

    df_insert_games_and_game_reports(df_new_games, df_new_game_reports)
    

if __name__ == "__main__":
    # Make competitions and seasons as list
    competition_ids = sys.argv[1].split(',')
    seasons = sys.argv[2].split(',')
    max_gameweek = sys.argv[3] if len(sys.argv) > 3 else None

    main(competition_ids, seasons, max_gameweek)